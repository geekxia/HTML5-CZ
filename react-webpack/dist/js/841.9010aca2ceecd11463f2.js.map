{"version":3,"file":"js/841.9010aca2ceecd11463f2.js","mappings":"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","sources":["webpack:///./src/views/16/components/CnCate.jsx","webpack:///./src/views/16/components/CnPage.jsx","webpack:///./src/views/16/components/CnList.jsx","webpack:///./src/views/16/Cnode.jsx"],"sourcesContent":["import React from 'react'\n\nexport default ({cates, value, onChange}) => {\n\n  return (\n    <div className='cates'>\n    {\n      cates.map(ele=>(\n        <span\n          className={value===ele.tab?\"on\":\"\"}\n          onClick={()=>onChange(ele.tab)}\n          key={ele.id}\n        >\n        { ele.label }\n        </span>\n      ))\n    }\n    </div>\n  )\n}\n","import React, { useMemo } from 'react'\n\nexport default ({value, onChange}) => {\n\n  const pages = useMemo(()=>{\n    // 1  1 2 3 4 5 ...\n      // 2  1 2 3 4 5 ...\n      // 3  1 2 3 4 5 ...\n      // 4  ... 2 3 4 5 6 ...\n      // n  ... n-2 n-1 n n+1 n+2 ...\n      const v = value\n      return v<=3 ? [1,2,3,4,5] : [v-2,v-1,v,v+1,v+2]\n  }, [value])\n\n  const prev = () => {\n    if (value===1) alert('已经是第一页了')\n    else onChange(value-1)\n  }\n\n  return (\n    <div className='pages'>\n    <span onClick={prev}>{'<<'}</span>\n    { value>3 && <span>...</span> }\n\n    {\n      pages.map(ele=>(\n        <span\n          key={ele}\n          className={ele===value?\"on\":\"\"}\n          onClick={()=>onChange(ele)}\n        >\n        { ele }\n        </span>\n      ))\n    }\n    <span>...</span>\n    <span onClick={()=>onChange(value+1)}>{'>>'}</span>\n  </div>\n  )\n}\n","import React from 'react'\n\nfunction time(val){\n  const s = (Date.now()-Date.parse(val))/1000\n  return (\n    s/60 < 1\n      ? Math.floor(s)+' 秒前'\n      : s/60/60 < 1\n        ? Math.floor(s/60)+' 分钟前'\n        : s/60/60/24 < 1\n          ? Math.floor(s/60/60)+' 小时前'\n          : s/60/60/24/30 < 1\n            ? Math.floor(s/60/60/24)+' 天前'\n            : s/60/60/24/30/12 < 1\n              ? Math.floor(s/60/60/24/30)+' 月前'\n              : Math.floor(s/60/60/24/30/12)+' 年前'\n  )\n}\n\nexport default ({list}) => {\n  return (\n    <div className='article-list'>\n    {\n      list.map(row=>(\n        <div className='article' key={row.id}>\n          <img src={row.author.avatar_url} />\n          <div className='num'>\n            <span>{row.reply_count}</span>\n            <span>/</span>\n            <span>{row.visit_count}</span>\n          </div>\n          {\n            (row.top || row.good || row.first)\n              && <span\n                  className={`label ${(row.top || row.good)?\"on\":\"\"}`}>\n                  { row.label }\n                </span>\n          }\n\n          <span className='title'>{row.title}</span>\n          <span className='time'>{time(row.last_reply_at)}</span>\n        </div>\n      ))\n    }\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport './style.scss'\nimport { inject, observer } from 'mobx-react'\n\nimport CnCate from './components/CnCate'\nimport CnPage from './components/CnPage'\nimport CnList from './components/CnList'\n\nexport default inject(['cnode'])(\n  observer(\n    ({cnode}) => {\n      // console.log('cnode', cnode)\n      const [cates] = useState([\n        { id: 1, tab: '', label: '全部' },\n          { id: 2, tab: 'good', label: '精华' },\n          { id: 3, tab: 'share', label: '分享' },\n          { id: 4, tab: 'ask', label: '问答' },\n          { id: 5, tab: 'job', label: '招聘' }\n      ])\n      const [tab, setTab] = useState('')\n      const [page, setPage] = useState(1)\n\n      useEffect(()=>{\n        console.log('调接口')\n        cnode.getList({page,tab,limit:5})\n      }, [tab, page])\n\n      return (\n        <div>\n          <CnCate cates={cates} value={tab} onChange={ev=>setTab(ev)} />\n          <CnList list={cnode.list} />\n          <CnPage value={page} onChange={ev=>setPage(ev)} />\n        </div>\n      )\n    }\n  )\n)\n"],"names":["cates","value","onChange","className","map","ele","tab","onClick","key","id","label","pages","useMemo","alert","list","row","src","author","avatar_url","reply_count","visit_count","top","good","first","title","val","last_reply_at","s","Date","now","parse","Math","floor","inject","observer","cnode","useState","setTab","page","setPage","useEffect","console","log","getList","limit","CnCate","ev","CnList","CnPage"],"sourceRoot":""}