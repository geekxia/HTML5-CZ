{"version":3,"file":"js/660.6731a37548b8a618830f.js","mappings":"+pDAKQA,ECCMC,ECCCC,EFANC,E,4wBGgCT,SHlCQH,EGoBF,CAAC,SAAS,SHpBSI,SADV,UAGND,EGiBRE,EAAAA,SAAAA,I,iyBAGC,WACEC,KAAKC,MAAMC,SAAS,O,oBAEtB,WAEE,OADAC,QAAQC,IAAI,aAAcJ,KAAKC,OAE7B,2BACE,0C,sEAVPF,CAEsBM,EAAAA,eDnBRT,ECiBdG,EHfU,SAAAE,GAEL,OACE,gCACIP,GAAU,gBAACG,EAAYI,IACtBP,GAAU,kCAAS,kDGYTW,EFpBTV,EEiBbW,EDbQ,SAAAL,GACL,OACE,gCACE,gBAACL,EAAD,KAAOK,EAAP,CAAcF,KAJP,aAKLA,KCYaM,EFlBrB,a,qRAAA,U,QAAA,G,EAAA,E,+YACE,WAAaJ,GAAO,a,4FAAA,UAClB,cAAMA,IACDM,MAAQ,CACXC,KAAM,OAHU,EADtB,O,EAAA,G,EAAA,sBAOE,SAASC,GACPN,QAAQC,IAAI,WAAYK,KAR5B,oBAUE,WAAU,WACAD,EAASR,KAAKO,MAAdC,KACR,OACE,2BACE,gBAACb,EAAD,KAAsBK,KAAKC,MAA3B,CAAkCO,KAAMA,EAAMN,SAAU,SAACO,GAAD,OAAM,EAAKC,QAAQD,OAC3E,0C,oEAfD,EAAP,CAAqBE,EAAAA,gBEkBAN","sources":["webpack:///./src/hoc/page.jsx","webpack:///./src/hoc/test.jsx","webpack:///./src/hoc/role.jsx","webpack:///./src/views/16/StudyHoc.jsx"],"sourcesContent":["import React from 'react'\n\nexport default roleArr => {\n  // 访问状态管理中的 role='admin'\n  const role = 'editor'\n  const isAuth = roleArr.includes(role)\n  // 返回高阶组件\n  return Wrapped => {\n    // 返回新UI组件\n    return props => {\n      // 返回视图结构\n      return (\n        <>\n          { isAuth && <Wrapped {...props} /> }\n          { !isAuth && <div>404，<button>Back To Home</button></div>}\n        </>\n      )\n    }\n  }\n}\n","// 高阶组件 = 高阶函数 = 容器组件\n// 入参是React组件（UI组件）\n// 返回一个新的被修饰过的组件\n\nimport React, { PureComponent } from 'react'\n\nfunction test(WrappedComponent) {\n  // do something\n  return class extends PureComponent {\n    constructor (props) {\n      super(props)\n      this.state = {\n        name: 'hoc'\n      }\n    }\n    handler (id) {\n      console.log('悄悄调接口，埋点', id)\n    }\n    render () {\n      const { name } = this.state\n      return (\n        <div>\n          <WrappedComponent {...this.props} name={name} onHandle={(id)=>this.handler(id)} />\n          <footer>底部</footer>\n        </div>\n      )\n    }\n  }\n}\n\nexport default test\n","import React from 'react'\n\n// export default C => (props => <C />)\n\n// 粗粒度的权限（页面）\n// 细粒度的权限（元素）\n\nexport default C => {\n  // 访问状态管理 role='admin'\n  const role = 'editor'\n  return props => {\n    return (\n      <>\n        <C {...props} role={role} />\n        { role==='admin' && <button>发布</button> }\n      </>\n    )\n  }\n}\n","import React from 'react'\n\nimport test from '@/hoc/test'\nimport role from '@/hoc/role'\nimport page from '@/hoc/page'\n\n// 使用高阶组件的第一种写法\n// class StudyHoc extends React.PureComponent {\n//   componentDidMount () {\n//     this.props.onHandle(101)\n//   }\n//   render () {\n//     console.log('page props', this.props)\n//     return (\n//       <div>\n//         <h1>学习高阶组件</h1>\n//       </div>\n//     )\n//   }\n// }\n// export default role(test(StudyHoc))\n\n// 使用高阶组件的第二种写法（装饰器语法，只能配合class关键字一起使用）\n@test\n@role\n@page(['editor','admin'])\nclass StudyHoc extends React.PureComponent {\n  componentDidMount () {\n    this.props.onHandle(101)\n  }\n  render () {\n    console.log('page props', this.props)\n    return (\n      <div>\n        <h1>学习高阶组件</h1>\n      </div>\n    )\n  }\n}\nexport default StudyHoc\n\n// export default role(\n//   test(\n//     props=>{\n//       console.log('page props', props)\n//       return (\n//         <div>\n//           <h1>学习高阶组件</h1>\n//         </div>\n//       )\n//     }\n//   )\n// )\n"],"names":["isAuth","WrappedComponent","C","Wrapped","includes","role","this","props","onHandle","console","log","React","test","state","name","id","handler","PureComponent"],"sourceRoot":""}